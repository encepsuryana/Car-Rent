/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frm_driver.java
 *
 * Created on Jan 12, 2017, 9:53:27 PM
 */
package du_rentalmobil.form;
//Import Javax
import javax.swing.*;
//Import Koneksi Database
import java.sql.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author SuryanaMcCarley
 */
public class frm_driver extends javax.swing.JInternalFrame {
    du_rentalmobil.koneksi.koneksiRental dbsetting;
    String driver,database,user,pass;
    Object tabel;
    /** Creates new form frm_driver */
    public frm_driver() {
        initComponents();
        dbsetting = new du_rentalmobil.koneksi.koneksiRental();
        driver = dbsetting.SettingPanel("DBDriver");
        database = dbsetting.SettingPanel("DBDatabase");
        user = dbsetting.SettingPanel("DBUsername");
        pass = dbsetting.SettingPanel("DBPassword");
        
        
        tbl_driver.setModel(tableModel);
        settableload();
        auto_iddriver();
    }
   
    public void auto_iddriver() {
        try {
            Class.forName(driver);
            Connection kon = (Connection) DriverManager.getConnection(database, user, pass);
            Statement stt = (Statement) kon.createStatement();
            String sql = "SELECT * FROM tabel_driver ORDER BY ID_Driver DESC";
            ResultSet rs = stt.executeQuery(sql);
            if (rs.next()) {
                String iddriver = rs.getString("ID_Driver").substring(1);
                String AN = "" + (Integer.parseInt(iddriver) + 1);
                String Nol = "";
                if(AN.length()==1)
                     {Nol = "000";}
                else if(AN.length()==2)
                     {Nol = "00";}
                else if(AN.length()==3)
                     {Nol = "0";}
                else if(AN.length()==4)
                     {Nol = "";}
                id_driver.setText("D" + Nol + AN);
                } else {
                id_driver.setText("D0001");
            } 
                rs.close();
                kon.close();
            } catch (Exception ex) {
                 System.err.println(ex.getMessage());
            }
    }
    public void membersihkan_teks() {
        nm_driver.setText("");
        alamat_driver.setText(""); 
        no_tlp_driver.setText("");
    }
    
    public void nonaktif_teks() {
        id_driver.setEnabled(false);
        nm_driver.setEnabled(false);
        alamat_driver.setEnabled(false);
        no_tlp_driver.setEnabled(false);
    }
    
    public void aktif_teks() {
        id_driver.setEnabled(true);
        nm_driver.setEnabled(true);
        alamat_driver.setEnabled(true);
        no_tlp_driver.setEnabled(true);
    }
    
  
    private javax.swing.table.DefaultTableModel tableModel= getDefaultTabelModel();
    private javax.swing.table.DefaultTableModel getDefaultTabelModel()        
    {
        return new javax.swing.table.DefaultTableModel
                (
                    new Object[][] {},
                    new String[] {"ID Driver", "Nama Driver", "Alamat", "Nomor Telepon"}
                )
    {
        boolean[] canEdit = new boolean[] {
            false, false, false, false
        };
        
       @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
       return canEdit[columnIndex];
        }
     };
   }
    
     String data[]= new String[4];
     private void settableload() {
           String stat = "";
           try {
               Class.forName(driver);
                       Connection kon = (Connection) DriverManager.getConnection(database,user,pass);      
                       
                       Statement stt=(Statement) kon.createStatement();
                       String SQL = "select * from tabel_driver";
                       ResultSet res = stt.executeQuery(SQL);
                       while(res.next()) {
                        data[0] = res.getString(1); 
                        data[1] = res.getString(2); 
                        data[2] = res.getString(3);
                        data[3] = res.getString(4); 
                        
                        tableModel.addRow(data);
                       }
                       res.close();
                       stt.close();
                       kon.close();
           } catch(Exception ex) {
                           System.err.println(ex.getMessage());
                           JOptionPane.showMessageDialog(null,ex.getMessage(),"Gagal Terhubung Ke Database",JOptionPane.INFORMATION_MESSAGE);
                       }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        id_driver = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        alamat_driver = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nm_driver = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        no_tlp_driver = new javax.swing.JTextField();
        simpan_driver = new javax.swing.JButton();
        ubah_driver = new javax.swing.JButton();
        hapus_driver = new javax.swing.JButton();
        batal_driver = new javax.swing.JButton();
        selesai_driver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_driver = new javax.swing.JTable();

        setClosable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Driver"));

        jLabel1.setText("ID Driver");

        id_driver.setText("0");

        jLabel3.setText("Nama Driver");

        alamat_driver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alamat_driverActionPerformed(evt);
            }
        });

        jLabel2.setText("Alamat");

        nm_driver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nm_driverActionPerformed(evt);
            }
        });

        jLabel4.setText("Nomor Telepon");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(id_driver)
                    .addComponent(nm_driver, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addComponent(alamat_driver, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addComponent(no_tlp_driver, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id_driver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nm_driver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(alamat_driver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(no_tlp_driver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        simpan_driver.setText("SIMPAN");
        simpan_driver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpan_driverActionPerformed(evt);
            }
        });

        ubah_driver.setText("UBAH");
        ubah_driver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubah_driverActionPerformed(evt);
            }
        });

        hapus_driver.setText("HAPUS");
        hapus_driver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus_driverActionPerformed(evt);
            }
        });

        batal_driver.setText("BATAL");
        batal_driver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batal_driverActionPerformed(evt);
            }
        });

        selesai_driver.setText("SELESAI");
        selesai_driver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selesai_driverActionPerformed(evt);
            }
        });

        tbl_driver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_driver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_driverMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_driver);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(simpan_driver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ubah_driver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hapus_driver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(batal_driver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(selesai_driver)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {batal_driver, hapus_driver, selesai_driver, simpan_driver, ubah_driver});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpan_driver)
                    .addComponent(ubah_driver)
                    .addComponent(hapus_driver)
                    .addComponent(batal_driver)
                    .addComponent(selesai_driver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int row = 0;
    public void tampil_driver() {
        row = tbl_driver.getSelectedRow();
        
        id_driver.setText(tableModel.getValueAt(row, 0).toString());
        nm_driver.setText(tableModel.getValueAt(row, 1).toString());
        alamat_driver.setText(tableModel.getValueAt(row, 2).toString());
        no_tlp_driver.setText(tableModel.getValueAt(row, 3).toString());
      
      ubah_driver.setEnabled(true);  
      hapus_driver.setEnabled(true);
      simpan_driver.setEnabled(true);
    }
    private void ubah_driverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubah_driverActionPerformed
      int  ubah= JOptionPane.showConfirmDialog(null,"Apakah anda ingin Mengubah data ini?", "Konfirmasi",JOptionPane.YES_NO_OPTION);
        
        if(ubah==JOptionPane.YES_OPTION) {
                
            String IDDriv  = id_driver.getText();
            String NamDriv  = nm_driver.getText();
            String AlaDriv = alamat_driver.getText();
            String NomTelDriv = no_tlp_driver.getText();
          
        if ((NamDriv.isEmpty()) || (AlaDriv.isEmpty())){
            JOptionPane.showMessageDialog(null,"Data Tidak Boleh Kosong, Slilahkan Dilengkapi");
            nm_driver.requestFocus();
        } else {
            try {
                    Class.forName(driver);
                    Connection kon = (Connection) DriverManager.getConnection(database,user, pass);
                    Statement stt = (Statement) kon.createStatement();
                    String SQL = "UPDATE `tabel_driver` "
                                    + "SET `ID_Driver`= '"+IDDriv+"',"
                                    + "`Nama_Driver`= '"+NamDriv+"',"
                                    + "`Alamat`= '"+AlaDriv+"',"
                                    + "`No_Telp`= '"+NomTelDriv+"'"
                            + "WHERE "
                            + "`ID_Driver`='"+tableModel.getValueAt(row, 0).toString()+"';";
                    
                    stt.executeUpdate(SQL);
                    data[0] = IDDriv;
                    data[1] = NamDriv;
                    data[2] = AlaDriv;
                    data[3] = NomTelDriv;
                    
                    tableModel.removeRow(row);
                    tableModel.insertRow(row, data);
                    stt.close();
                    kon.close();
                    tbl_driver.clearSelection();

                    tableModel.setRowCount(0);
                    settableload();
                    auto_iddriver();
                                        
                    membersihkan_teks();
                    simpan_driver.setEnabled(true);
                    hapus_driver.setEnabled(true);
                } catch (Exception ex) {
                            System.err.println(ex.getMessage());
            }
        }
            } else if(ubah==JOptionPane.NO_OPTION) {
            batal_driverActionPerformed(evt);
        }
    }//GEN-LAST:event_ubah_driverActionPerformed

    private void hapus_driverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus_driverActionPerformed
         int  hapus= JOptionPane.showConfirmDialog(null,"Apakah anda ingin Menghapus data ini?", "Konfirmasi",JOptionPane.YES_NO_OPTION);
        
        if(hapus==JOptionPane.YES_OPTION) {
        int baris = tbl_driver.getSelectedRow();
            if (baris != -1) {
                String iddriver = tbl_driver.getValueAt(baris, 0).toString();
                String SQL = "DELETE FROM tabel_driver WHERE ID_Driver='"+iddriver+"'";
                tableModel.removeRow(row);
                membersihkan_teks();
                int status = du_rentalmobil.koneksi.koneksiRental.execute(SQL);
                if (status==1) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    auto_iddriver();
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal dihapus", "Gagal", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Pilih Baris Data Terlebih dahulu", "Error !!", JOptionPane.WARNING_MESSAGE);
            }
        } else if(hapus==JOptionPane.NO_OPTION) {
            batal_driverActionPerformed(evt);        }
            aktif_teks();
    
    }//GEN-LAST:event_hapus_driverActionPerformed

    private void batal_driverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batal_driverActionPerformed
        membersihkan_teks();
        auto_iddriver();
        simpan_driver.setVisible(true);
    }//GEN-LAST:event_batal_driverActionPerformed

    private void selesai_driverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selesai_driverActionPerformed
        this.dispose();
    }//GEN-LAST:event_selesai_driverActionPerformed

    private void simpan_driverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpan_driverActionPerformed
        String data[]=new String[4];

        
        if (nm_driver.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Data Tidak Boleh Kosong, Silahkan dilengkapi");
            nm_driver.requestFocus();
        } else {
        try {
         Class.forName(driver);
         Connection kon = (Connection) DriverManager.getConnection(database, user, pass);
         Statement stt = (Statement) kon.createStatement();
         String SQL = "INSERT INTO tabel_driver (ID_Driver,"
                                                       + "Nama_Driver,"
                                                       + "Alamat,"
                                                       + "No_Telp)"
                                                       + "VALUES" 
                                                       + "('"+id_driver.getText()+"',"                
                                                       + "'"+nm_driver.getText()+"',"
                                                       + "'"+alamat_driver.getText()+"',"
                                                       + "'"+no_tlp_driver.getText()+"')";
                      stt.executeUpdate(SQL);
                      data[0]  = id_driver.getText();                     
                      data[1]  = nm_driver.getText();
                      data[2]  = alamat_driver.getText();
                      data[3]  = no_tlp_driver.getText();
                      auto_iddriver();
                      
                      tableModel.setRowCount(0);
                      settableload();
                      stt.close();
                      kon.close();
                      membersihkan_teks();
                      simpan_driver.setEnabled(true);
                      ubah_driver.setEnabled(true);
                      hapus_driver.setEnabled(true);
                      batal_driver.setEnabled(true);
                      
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"Gagal Terhubung Ke Database", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_simpan_driverActionPerformed

    private void tbl_driverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_driverMouseClicked
        if(evt.getClickCount() == 1) {
            tampil_driver();
           }
    }//GEN-LAST:event_tbl_driverMouseClicked

    private void nm_driverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nm_driverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nm_driverActionPerformed

    private void alamat_driverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alamat_driverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alamat_driverActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamat_driver;
    private javax.swing.JButton batal_driver;
    private javax.swing.JButton hapus_driver;
    private javax.swing.JLabel id_driver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nm_driver;
    private javax.swing.JTextField no_tlp_driver;
    private javax.swing.JButton selesai_driver;
    private javax.swing.JButton simpan_driver;
    private javax.swing.JTable tbl_driver;
    private javax.swing.JButton ubah_driver;
    // End of variables declaration//GEN-END:variables
}
